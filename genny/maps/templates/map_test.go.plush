// Code generated by github.com/gobuffalo/mapgen. DO NOT EDIT.

package <%= m.Destination %>

import (
	"sort"
	"testing"

  "github.com/stretchr/testify/require"
  <%= if (m.Package) { %>
    "<%= m.Package %>"
  <% } %>
)

func Test_<%= m.Name %>Map(t *testing.T) {
	r := require.New(t)

	sm := &<%= m.Name %>Map{}

	sm.Store("a", <%= m.A %>)

	s, ok := sm.Load("a")
	r.True(ok)
	r.Equal(<%= m.A %>, s)

	s, ok = sm.LoadOrStore("b", <%= m.B %>)
	r.True(ok)
	r.Equal(<%= m.B %>, s)

	s, ok = sm.LoadOrStore("b", <%= m.BB %>)
	r.True(ok)
	r.Equal(<%= m.B %>, s)

	var keys []string

	sm.Range(func(key string, value <%= m.GoType %>) bool {
		keys = append(keys, key)
		return true
	})

	sort.Strings(keys)

	r.Equal(sm.Keys(), keys)

	sm.Delete("b")
	r.Equal([]string{"a", "b"}, keys)

	sm.Delete("b")
	_, ok = sm.Load("b")
	r.False(ok)

	func(m *<%= m.Name %>Map) {
		m.Store("c", <%= m.C %>)
	}(sm)
	s, ok = sm.Load("c")
	r.True(ok)
	r.Equal(<%= m.C %>, s)
}
